#cloud-config
users:
  - name: ${vm_username}
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/bash
    ssh_authorized_keys:
      - ${ssh_public_key}
    lock_passwd: false
    passwd: ${vm_password}

package_update: true
package_upgrade: true

packages:
  - curl
  - wget
  - apt-transport-https
  - ca-certificates
  - gnupg
  - lsb-release
  - software-properties-common

runcmd:
  # Disable swap
  - swapoff -a
  - sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
  
  # Load kernel modules
  - modprobe br_netfilter
  - modprobe overlay
  - echo 'br_netfilter' > /etc/modules-load.d/k8s.conf
  - echo 'overlay' >> /etc/modules-load.d/k8s.conf
  
  # Configure sysctl
  - echo 'net.bridge.bridge-nf-call-iptables = 1' >> /etc/sysctl.conf
  - echo 'net.bridge.bridge-nf-call-ip6tables = 1' >> /etc/sysctl.conf
  - echo 'net.ipv4.ip_forward = 1' >> /etc/sysctl.conf
  - sysctl --system
  
  # Add Kubernetes repository
  - curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | gpg --dearmor -o /usr/share/keyrings/kubernetes-archive-keyring.gpg
  - echo 'deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' > /etc/apt/sources.list.d/kubernetes.list
  - apt-get update
  
  # Install Kubernetes packages
  - apt-get install -y kubelet=${kubernetes_version}-1.1 kubeadm=${kubernetes_version}-1.1 kubectl=${kubernetes_version}-1.1
  - apt-mark hold kubelet kubeadm kubectl
  
  # Install container runtime
  - |
    if [ "${container_runtime}" = "containerd" ]; then
      apt-get install -y containerd
      mkdir -p /etc/containerd
      containerd config default | tee /etc/containerd/config.toml
      sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml
      systemctl restart containerd
      systemctl enable containerd
    else
      curl -fsSL https://get.docker.com -o get-docker.sh
      sh get-docker.sh
      systemctl enable docker
      systemctl start docker
    fi
  
  # Install CNI plugins
  - wget -O /tmp/cni-plugins-linux-amd64-v1.3.0.tgz https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz
  - mkdir -p /opt/cni/bin
  - tar -C /opt/cni/bin -xzf /tmp/cni-plugins-linux-amd64-v1.3.0.tgz
  
  # Enable kubelet
  - systemctl enable kubelet
  
  # Create necessary directories
  - mkdir -p /etc/kubernetes
  - mkdir -p /var/lib/kubernetes
  - mkdir -p /var/log/kubernetes

write_files:
  - path: /etc/kubernetes/kubelet-config.yaml
    content: |
      apiVersion: kubelet.config.k8s.io/v1beta1
      kind: KubeletConfiguration
      clusterDNS:
        - ${cluster_dns}
      clusterDomain: cluster.local
      cgroupDriver: systemd
      containerRuntimeEndpoint: unix:///run/containerd/containerd.sock
      resolvConf: /run/systemd/resolve/resolv.conf
      runtimeRequestTimeout: 2m
      hairpinMode: promiscuous-bridge
      maxPods: 110
      podCIDR: ${pod_cidr}
      serviceCIDR: ${service_cidr}
    permissions: '0644'
    owner: root:root

final_message: "Kubernetes node setup completed successfully!"
